
scripts:



  docs:
    - echo "visit https://doc.deno.land/builtin/stable"
    - google-chrome https://doc.deno.land/builtin/stable || sh $BROWSER https://doc.deno.land/builtin/stable



  auto-format:
    cmd: sh _scripts/auto_format.sh
    # gitHook: post-commit

  cov:
    desc: Shows uncovered lists
    cmd:
      - deno task test --coverage=.coverage
      - deno coverage --unstable .coverage --lcov > .coverage/coverage.lcov
      - which genhtml || sudo apt install lcov
      - genhtml -o .coverage/html .coverage/coverage.lcov
      - deno run -A https://deno.land/std/http/file_server.ts coverage/html


  # commitlint:
  #   cmd: deno run --allow-read="./.git" _scripts/commitlint.ts


  commitlint:
    # dependencies: commitlint and @commitlint/config-conventional
    # yarn global add commitlint @commitlint/config-conventional
    desc: Checks commit messages format with commitlint
    cmd: deno run -A --unstable npm:commitlint -x @commitlint/config-conventional -e ${GIT_ARGS[1]}
    gitHook: commit-msg
    # gitHook: commit-msg
  # pre-commit:
  #   desc: Lints and formats staged files
  #   cmd: |
  #     FILES=$(git diff --staged --name-only --diff-filter=ACMR "*.*ts" "*.*js")
  #         [ -z "$FILES" ] && exit 0
  #         echo "$FILES" | xargs deno lint
  #         echo "$FILES" | xargs deno fmt
  #         echo "$FILES" > .stagedFiles
    # gitHook: pre-commit

  # post-commit:
  #   desc: Commit formatted files
  #   env:
  #     VR_HOOKS: "false"
  #   cmd: |
  #         touch .stagedFiles
  #         FILES=$(cat .stagedFiles)
  #         rm .stagedFiles
  #         [ -z "$FILES" ] && exit 0
  #         echo "$FILES" | xargs git add &&
  #         git commit -m "format: apply auto format"
    # gitHook: post-commit

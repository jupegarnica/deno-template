# allow:
#   - write
#   - read
#   - net
#   - env

# envFile:
#   - .env
env:
  DENO_DIR: .cache

scripts:
  dev:
    desc: Starts dev mode
    cmd: deno task dev

  start:
    desc: Starts  main
    cmd: deno task start

  debug:
    desc: Runs main script
    cmd: deno task debug

  server:
    desc: Starts deploy server
    cmd: deno task server

  test:
    desc: Runs the tests
    cmd: deno tasks test-doc

  test-ci:
    desc: Runs the tests
    cmd:
      pll:
        - timeout 17 vr server || exit 0
        - sleep 1 && vr test --no-prompt
    # gitHook: pre-push


  cache:
    cmd: deno cache --lock=lock.json --lock-write **/*.[jt]s


  update:
    desc: Update dependencies ensuring pass tests
    cmd:
      - deno run -A https://deno.land/x/udd/main.ts  **/*.[tj]s* --test="vr test-ci"
      - vr cache

  lint:
    desc: Runs lint
    cmd: deno lint --ignore=coverage,.cache

  fmt:
    desc: Runs format
    cmd: deno fmt --ignore=coverage,.cache

  docs:
    - echo "visit https://doc.deno.land/builtin/stable"
    - google-chrome https://doc.deno.land/builtin/stable || sh $BROWSER https://doc.deno.land/builtin/stable

  build_npm:
    desc: |
     Builds the package for npm
     docs: https://deno.land/x/dnt
    cmd: deno task build-npm

  pre-commit:
    desc: Lints and formats staged files
    cmd: |
      FILES=$(git diff --staged --name-only --diff-filter=ACMR "*.*ts" "*.*js")
          [ -z "$FILES" ] && exit 0
          echo "$FILES" | xargs deno lint
          echo "$FILES" | xargs deno fmt
          echo "$FILES" > .stagedFiles
    gitHook: pre-commit

  post-commit:
    desc: Commit formatted files
    env:
      VR_HOOKS: "false"
    cmd: |
          touch .stagedFiles
          FILES=$(cat .stagedFiles)
          rm .stagedFiles
          [ -z "$FILES" ] && exit 0
          echo "$FILES" | xargs git add &&
          git commit -m "format: apply auto format"
    gitHook: post-commit


  cov:
    desc: Shows uncovered lists
    cmd:
      - vr test --coverage=coverage
      - deno coverage --unstable coverage --lcov > coverage/coverage.lcov
      - which genhtml || sudo apt install lcov
      - genhtml -o coverage/html coverage/coverage.lcov
      - deno run -A https://deno.land/std/http/file_server.ts coverage/html

  ci:
    desc: Runs lint, check format and test
    cmd:
      - vr lint
      - vr fmt --check
      - vr test
    gitHook: pre-push


  commitlint:
    # cmd: echo --- ${GIT_ARGS} ---
    cmd: deno run --allow-read="./.git" _scripts/commitlint.ts
    gitHook: commit-msg
  # tag:
  #   cmd: deno run -A --unstable https://deno.land/x/release/release.ts patch
  tag:
    desc: Create tag
    cmd: deno task tag
  release:
    desc: Create release
    cmd: deno task release

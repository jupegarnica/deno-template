{
  "tasks": {
    // common
    "dev": "deno run -A --watch src/main.ts",
    "start": "deno run src/main.ts",
    "debug": "deno run --inspect-brk src/main.ts",

    // server
    "server": "deno run --allow-net --allow-env --allow-read=.  src/server.ts",
    "server-timeout": "timeout 5 deno task server || exit 0",
    "json-server": "touch db.json && deno run -A --unstable npm:json-server db.json",

    // build
    "build-npm": "deno run -A https://deno.land/x/dnt_prompt/main.ts",
    "publish-npm": "deno task build-npm && npm publish",

    // release
    "version": "deno run  -A https://deno.land/x/version/index.ts",
    "release": "deno task version patch && git push --tags origin main",

    // test
    "test": "deno test -A --ignore=.cache --no-prompt --coverage=.coverage",
    "test-doc": "deno task test --doc",
    "test-cov": "deno task test && deno coverage .coverage",
    "test-watch": "deno task test --watch test",
    "test-server": "deno task server-timeout & sleep 1 && TEST_SERVER=1  deno task test -- --filter=[server]",

    // bench
    "bench": "deno bench -A --unstable --ignore=.cache --no-prompt",

    // lint
    "ci": "deno lint && deno fmt --check && deno task test",

    // chore
    "cache": "DENO_DIR=.cache deno cache --lock=lock.json --lock-write src/deps.ts test/deps.ts",
    "udd": "deno run -A https://deno.land/x/udd/main.ts --test='deno task test'  'src/**/*.ts' 'test/**/*.ts'"
  },
  "lint": {
    "files": {
      "exclude": [
        ".cache",
        ".git",
        ".npm",
        ".coverage",
        "node_modules/**",
        "vendor/**"
      ]
    },
    "rules": {
      "exclude": []
    }
  },
  "fmt": {
    "files": {
      "exclude": [
        ".cache",
        ".git",
        ".coverage",
        "node_modules/**",
        "vendor/**",
        ".npm"
      ]
    },
    "options": {
      "useTabs": false,
      // "lineWidth": 80,
      // "indentWidth": 2,
      "singleQuote": false,
      "proseWrap": "always"
    }
  }
  // "importMap":"vendor/import_map.json"
}
